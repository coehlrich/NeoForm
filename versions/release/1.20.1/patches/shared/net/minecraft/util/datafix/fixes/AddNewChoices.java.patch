--- a/net/minecraft/util/datafix/fixes/AddNewChoices.java
+++ b/net/minecraft/util/datafix/fixes/AddNewChoices.java
@@ -4,6 +4,7 @@
 import com.mojang.datafixers.TypeRewriteRule;
 import com.mojang.datafixers.DSL.TypeReference;
 import com.mojang.datafixers.schemas.Schema;
+import com.mojang.datafixers.types.templates.TaggedChoice;
 import com.mojang.datafixers.types.templates.TaggedChoice.TaggedChoiceType;
 import java.util.Locale;
 
@@ -28,8 +29,9 @@
       if (p_14639_.getKeyType() != p_14640_.getKeyType()) {
          throw new IllegalStateException("Could not inject: key type is not the same");
       } else {
-         return this.fixTypeEverywhere(p_14638_, p_14639_, p_14640_, p_14636_ -> p_145061_ -> {
-               if (!p_14640_.hasType(p_145061_.getFirst())) {
+         // Vineflower merged the parameter "p_14640_" and local variable that was assigned to it even though the local variable had the "K" type parameter while the parameter doesn't
+         return this.fixTypeEverywhere(p_14638_, p_14639_, (TaggedChoice.TaggedChoiceType<K>)p_14640_, p_14636_ -> p_145061_ -> {
+               if (!((TaggedChoice.TaggedChoiceType<K>)p_14640_).hasType(p_145061_.getFirst())) {
                   throw new IllegalArgumentException(String.format(Locale.ROOT, "Unknown type %s in %s ", p_145061_.getFirst(), this.f_14626_));
                } else {
                   return p_145061_;
